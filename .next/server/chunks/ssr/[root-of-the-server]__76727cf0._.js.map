{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/user/agenko-nextjs-143/src/components/UTMProvider.tsx"],"sourcesContent":["// src/components/UTMProvider.tsx\n\"use client\";\n\nimport { useSearchParams } from \"next/navigation\";\nimport { useEffect, ReactNode, Suspense } from \"react\";\n\n// Define the key here so it can be exported and used by other components\nexport const SESSION_STORAGE_KEY = 'marketing_params';\n\nfunction UTMHandler({ children }: { children: ReactNode }) {\n  const searchParams = useSearchParams();\n\n  useEffect(() => {\n    const currentQueryString = searchParams.toString();\n\n    // This is \"first-touch\" attribution. It only saves the parameters\n    // if the URL has them AND if nothing has been saved in this session yet.\n    if (currentQueryString && !sessionStorage.getItem(SESSION_STORAGE_KEY)) {\n      sessionStorage.setItem(SESSION_STORAGE_KEY, currentQueryString);\n    }\n  }, [searchParams]);\n\n  return <>{children}</>;\n}\n\n// The provider component wraps the logic in Suspense, as required by useSearchParams\nexport const UTMProvider = ({ children }: { children: ReactNode }) => {\n  return (\n    <Suspense fallback={null}>\n      <UTMHandler>{children}</UTMHandler>\n    </Suspense>\n  );\n};"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;AAGjC;AACA;AAHA;;;;AAMO,MAAM,sBAAsB;AAEnC,SAAS,WAAW,EAAE,QAAQ,EAA2B;IACvD,MAAM,eAAe,IAAA,qJAAe;IAEpC,IAAA,kNAAS,EAAC;QACR,MAAM,qBAAqB,aAAa,QAAQ;QAEhD,kEAAkE;QAClE,yEAAyE;QACzE,IAAI,sBAAsB,CAAC,eAAe,OAAO,CAAC,sBAAsB;YACtE,eAAe,OAAO,CAAC,qBAAqB;QAC9C;IACF,GAAG;QAAC;KAAa;IAEjB,qBAAO;kBAAG;;AACZ;AAGO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAA2B;IAC/D,qBACE,8OAAC,iNAAQ;QAAC,UAAU;kBAClB,cAAA,8OAAC;sBAAY;;;;;;;;;;;AAGnB","debugId":null}}]
}